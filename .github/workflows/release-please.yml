on:
  push:
    branches:
      - main

name: release-please

jobs:
  release-please:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v4
        id: release-please
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}

  github-release:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    strategy:
      matrix:
        target: [chrome, firefox]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: "package.json"

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: build zip (chrome)
        if: ${{ matrix.target == 'chrome' }}
        run: pnpm zip

      - name: build zip (firefox)
        if: ${{ matrix.target == 'firefox' }}
        run: pnpm zip:firefox

      - name: Upload Release Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: gh release upload ${{ needs.release-please.outputs.tag_name }} ./.output/*.zip

  store-release:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    strategy:
      matrix:
        target: [chrome, firefox]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: build zip (chrome)
        if: ${{ matrix.target == 'chrome' }}
        run: pnpm zip

      - name: build zip (firefox)
        if: ${{ matrix.target == 'firefox' }}
        run: pnpm zip:firefox

      - name: submit (chrome)
        if: ${{ matrix.target == 'chrome' }}
        env:
          CHROME_CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
          CHROME_CLIENT_SECRET: ${{ secrets.CHROME_CLIENT_SECRET }}
          CHROME_REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}
        run: pnpm submit

      - name: submit (firefox)
        if: ${{ matrix.target == 'firefox' }}
        env:
          FIREFOX_JWT_ISSUER: ${{ secrets.MOZILLA_JWT_ISSUER }}
          FIREFOX_JWT_SECRET: ${{ secrets.MOZILLA_JWT_SECRET }}
        run: pnpm submit:firefox
